<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net9.0;net9.0-android;net9.0-ios</TargetFrameworks>
		<!-- MacOS not supported -->
		<!-- Removed ;net7.0-maccatalyst -->
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net9.0-windows10.0.19041.0</TargetFrameworks>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">12.2</SupportedOSPlatformVersion>
		<!--<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">14.0</SupportedOSPlatformVersion>-->
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">23.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<AllowUnsafeBlocks>True</AllowUnsafeBlocks>
		<SkipValidateMauiImplicitPackageReferences>true</SkipValidateMauiImplicitPackageReferences>
	</PropertyGroup>

	<!-- Package, only with release mode -->
	<PropertyGroup Condition="'$(Configuration)' == 'Release' ">
		<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
	</PropertyGroup>

	<!-- Package properties -->
	<PropertyGroup>
		<Version>1.2.2.0</Version>
		<Title>Tesseract Ocr Maui</Title>
		<PackageId>TesseractOcrMaui</PackageId>
		<Authors>henrivain</Authors>
		<Description>Tesseract wrapper for .Net Maui Windows, iOS and Android platforms.</Description>
		<PackageProjectUrl></PackageProjectUrl>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<RepositoryUrl>https://github.com/henrivain/TesseractOcrMaui</RepositoryUrl>
		<RepositoryType>git</RepositoryType>
		<PackageTags>tesseract;ocr;maui;csharp;android;windows;ios;arm64;arm64-v8a;arm-v7a;x86_64;x86;</PackageTags>
		<PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
		<PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
		<Copyright>Copyright 2023-2025 Henri Vainio</Copyright>
		<!-- Output will be found inside this folder locally -->
		<PackageOutputPath>C:\Nugets</PackageOutputPath>
		<NeutralLanguage>en</NeutralLanguage>
		<PackAsTool>False</PackAsTool>
		<GenerateDocumentationFile>True</GenerateDocumentationFile>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
		<EmpedUntrackedSSources>true</EmpedUntrackedSSources>
		<IncludeSymbols>true</IncludeSymbols>
		<IncludeSource>true</IncludeSource>
		<Deterministic>true</Deterministic>
	</PropertyGroup>

	<PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
		<ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
	</PropertyGroup>


	<!-- Nuget includes -->
	<ItemGroup>
		<None Include="..\README.md" Link="Properties\README.md">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
	</ItemGroup>

	<!-- Android native libraries-->
	<!-- Include: libtesseract.so, libleptonica.so, libpng16.so, libtiff.so, libjpeg.so
		 for Android platforms x86, x86_64, armeabi-v7a, arm64-v8a -->
	<ItemGroup Condition="$(TargetFramework.Contains('-android'))">
		<AndroidNativeLibrary Include="lib\Android\**" />
	</ItemGroup>

	<!-- Windows native libraries to nuget -->
	<!-- No condition needed, because package path tells to include in windows -->
	<ItemGroup Condition="'$(Configuration)' == 'Release' ">
		<Resource Include="lib\Windows\x86_64\*.dll" Pack="true" PackagePath="lib\net9.0-windows10.0.19041\">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<PackageCopyToOutput>true</PackageCopyToOutput>
		</Resource>
	</ItemGroup>

	<!-- Define new constants to follow -->
	<PropertyGroup>
		<DefineConstants Condition="'$(TargetFramework)' == 'net7.0'">$(DefineConstants);NET7_0_ONLY</DefineConstants>
		<DefineConstants Condition="'$(TargetFramework)' == 'net8.0'">$(DefineConstants);NET8_0_ONLY</DefineConstants>
		<DefineConstants Condition="'$(TargetFramework)' == 'net9.0'">$(DefineConstants);NET9_0_ONLY</DefineConstants>
		<DefineConstants Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))'">$(DefineConstants);WINDOWS_OR_WINDOWS_NONMAUI</DefineConstants>
		<DefineConstants Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))'">$(DefineConstants);LINUX</DefineConstants>
	</PropertyGroup>

	<ItemGroup Condition="'$(Configuration)' == 'Release' And $(DefineConstants.Contains(WINDOWS_OR_WINDOWS_NONMAUI))">
		<Resource Include="lib\Windows\x86_64\*.dll" Pack="true" PackagePath="lib\net9.0\">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<PackageCopyToOutput>true</PackageCopyToOutput>
		</Resource>
	</ItemGroup>

	<!-- Copy dlls for debugging test app -->
	<!-- Dlls go to output folder, so dll import can find them. -->
	<ItemGroup Condition="$(TargetFramework.Contains('-windows'))">
		<ContentWithTargetPath Include="lib\Windows\x86_64\**">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>%(Filename)%(Extension)</TargetPath>
		</ContentWithTargetPath>
	</ItemGroup>

	<ItemGroup>
		<Folder Include="Properties\" />
	</ItemGroup>

	<ItemGroup>
	  <PackageReference Update="Microsoft.Maui.Controls" Version="9.0.110" />
		<PackageReference Update="Microsoft.Maui.Controls.Compatibility" Version="9.0.110" />
	</ItemGroup>


	<ItemGroup Condition="'$(TargetFramework)' == 'net9.0-ios'">
	  <PackageReference Include="TesseractOcrMaui.IOS">
	    <Version>1.2.1</Version>
	  </PackageReference>
	</ItemGroup>

	
</Project>

